{
  "name": "@rimbu/sorted",
  "version": "0.10.1",
  "description": "Immutable SortedMap and SortedSet implementations for TypeScript",
  "keywords": [
    "sortedmap",
    "sortedset",
    "sorted",
    "order",
    "map",
    "set",
    "immutable",
    "collection",
    "rimbu",
    "typescript"
  ],
  "homepage": "https://rimbu.org",
  "author": {
    "name": "Arvid Nicolaas",
    "email": "arvid@rimbu.org",
    "url": "https://github.com/vitoke"
  },
  "license": "MIT",
  "funding": [
    {
      "type": "individual",
      "url": "https://github.com/sponsors/vitoke"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/rimbu-org/rimbu.git",
    "directory": "packages/sorted"
  },
  "source": "./src/main/index.ts",
  "main": "./dist/main/main/index.js",
  "module": "./dist/module/main/index.js",
  "types": "./dist/types/main/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/types/main/index.d.ts",
      "import": "./dist/module/main/index.js",
      "require": "./dist/main/main/index.js",
      "bun": "./src/main/index.ts",
      "default": "./dist/module/main/index.js"
    },
    "./common": {
      "types": "./dist/types/common/index.d.ts",
      "import": "./dist/module/common/index.js",
      "require": "./dist/main/common/index.js",
      "bun": "./src/common/index.ts",
      "default": "./dist/module/common/index.js"
    },
    "./custom": {
      "types": "./dist/types/custom/index.d.ts",
      "import": "./dist/module/custom/index.js",
      "require": "./dist/main/custom/index.js",
      "bun": "./src/custom/index.ts",
      "default": "./dist/module/custom/index.js"
    },
    "./map": {
      "types": "./dist/types/map/index.d.ts",
      "import": "./dist/module/map/index.js",
      "require": "./dist/main/map/index.js",
      "bun": "./src/map/index.ts",
      "default": "./dist/module/map/index.js"
    },
    "./map-custom": {
      "types": "./dist/types/map-custom/index.d.ts",
      "import": "./dist/module/map-custom/index.js",
      "require": "./dist/main/map-custom/index.js",
      "bun": "./src/map-custom/index.ts",
      "default": "./dist/module/map-custom/index.js"
    },
    "./set": {
      "types": "./dist/types/set/index.d.ts",
      "import": "./dist/module/set/index.js",
      "require": "./dist/main/set/index.js",
      "bun": "./src/set/index.ts",
      "default": "./dist/module/set/index.js"
    },
    "./set-custom": {
      "types": "./dist/types/set-custom/index.d.ts",
      "import": "./dist/module/set-custom/index.js",
      "require": "./dist/main/set-custom/index.js",
      "bun": "./src/set-custom/index.ts",
      "default": "./dist/module/set-custom/index.js"
    }
  },
  "files": [
    "dist",
    "src",
    "map",
    "map-custom",
    "set",
    "set-custom"
  ],
  "scripts": {
    "build": "yarn clean && yarn bundle",
    "build:deno": "rimraf deno_dist ../../deno_dist/sorted && denoify && mv deno_dist ../../deno_dist/sorted",
    "bundle": "yarn bundle:main && yarn bundle:module && yarn bundle:types",
    "bundle:main": "tsc --p tsconfig.main.json",
    "bundle:module": "tsc --p tsconfig.module.json",
    "bundle:types": "tsc --p tsconfig.types.json",
    "clean": "rimraf dist",
    "extract-api": "yarn extract-api:main && yarn extract-api:map && yarn extract-api:map-custom && yarn extract-api:set && yarn extract-api:set-custom",
    "extract-api:main": "api-extractor run --local --verbose --config config/api-extractor.main.json",
    "extract-api:map": "api-extractor run --local --verbose --config config/api-extractor.map.json",
    "extract-api:map-custom": "api-extractor run --local --verbose --config config/api-extractor.map-custom.json",
    "extract-api:set": "api-extractor run --local --verbose --config config/api-extractor.set.json",
    "extract-api:set-custom": "api-extractor run --local --verbose --config config/api-extractor.set-custom.json",
    "format": "yarn format:base --write",
    "format:base": "prettier \"{!CHANGELOG.md}|**/**/*.{ts,tsx,js,json,md}\"",
    "format:check": "yarn format:base --check",
    "lint": "eslint src",
    "test": "jest",
    "test:random": "jest --config jest-random.config.json --runInBand",
    "test:types": "tsd",
    "typecheck": "tsc"
  },
  "sideEffects": false,
  "dependencies": {
    "@rimbu/base": "^0.11.1",
    "@rimbu/collection-types": "^0.10.1",
    "@rimbu/common": "^0.12.1",
    "@rimbu/stream": "^0.13.1",
    "tslib": "^2.5.0"
  },
  "publishConfig": {
    "access": "public"
  }
}
